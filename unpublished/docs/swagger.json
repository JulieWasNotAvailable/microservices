{
    "swagger": "2.0",
    "info": {
        "description": "Deals with unpublished beats and moderation. Has its own duplicates of Tags, Genre, and other metadata, except MFCC characteristics. When user publishes a beat, sends a kafka message to get MFCC characteristics from the track. If the user publishes a new tag, tag is updated in unpublished service and then in beats service.",
        "title": "Fiber Unpublished Beats Service",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a hello message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "utils"
                ],
                "summary": "Simple hello endpoint",
                "responses": {
                    "200": {
                        "description": "hello!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metadata/files": {
            "get": {
                "description": "Retrieve all available files metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get all available files",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all files metadata",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/metadata/filesByBeatId/{beatId}": {
            "get": {
                "description": "Retrieve all available files for a specific beat by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get available files by beat ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beat ID in UUID format",
                        "name": "beatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.AvailableFiles"
                        }
                    },
                    "400": {
                        "description": "Invalid beat ID format",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Beat not found",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the available files (MP3, WAV, ZIP) for a specific beat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Update available files for a beat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beat ID in UUID format",
                        "name": "beatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File URLs to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.AvailableFiles"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated available files",
                        "schema": {
                            "$ref": "#/definitions/entities.AvailableFiles"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format or request body",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Beat not found",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/genres": {
            "get": {
                "description": "Retrieve all genres from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get all genres",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new genre to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Create a new genre",
                "parameters": [
                    {
                        "description": "Genre to create",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Genre"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/instruments": {
            "get": {
                "description": "Retrieve all instruments from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "instruments"
                ],
                "summary": "Get all instruments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new instrument to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "instruments"
                ],
                "summary": "Create a new instrument",
                "parameters": [
                    {
                        "description": "Instrument to create",
                        "name": "instrument",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Instrument"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/keynotes": {
            "get": {
                "description": "Retrieve all keynotes from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keynotes"
                ],
                "summary": "Get all keynotes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new keynote to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keynotes"
                ],
                "summary": "Create a new keynote",
                "parameters": [
                    {
                        "description": "Keynote to create",
                        "name": "keynote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Keynote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/moods": {
            "get": {
                "description": "Retrieve all moods from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moods"
                ],
                "summary": "Get all moods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new mood to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moods"
                ],
                "summary": "Create a new mood",
                "parameters": [
                    {
                        "description": "Mood to create",
                        "name": "mood",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Mood"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/tags": {
            "get": {
                "description": "Retrieve all tags from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tag to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create a new tag",
                "parameters": [
                    {
                        "description": "Tag to create",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/metadata/timestamps": {
            "get": {
                "description": "Retrieve all timestamps from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timestamps"
                ],
                "summary": "Get all timestamps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new timestamp to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timestamps"
                ],
                "summary": "Create a new timestamp",
                "parameters": [
                    {
                        "description": "Timestamp to create",
                        "name": "timestamp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Timestamp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.MetadataErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/allUnpublishedBeats": {
            "get": {
                "description": "Get all unpublished beats in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all unpublished beats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/beatsForModerationByDate/{from}/{to}": {
            "get": {
                "description": "Get beats in moderation status within specified date range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get beats in moderation by date range. Warning: uses unix data.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start timestamp",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "End timestamp",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/makeEmptyBeat": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save an unpublished beat with draft status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beats"
                ],
                "summary": "Save a beat draft",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/publishBeat/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Publish an existing beat (mock implementation)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beats"
                ],
                "summary": "Publish a beat. Deletes it from the current service, and posts to beat service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beat ID to publish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/saveDraft": {
            "patch": {
                "description": "Update an existing unpublished beat entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beats"
                ],
                "summary": "Update an unpublished beat",
                "parameters": [
                    {
                        "description": "Beat data to update",
                        "name": "beat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated beat",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid request body",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/unpbeats/sendToModeration/{id}": {
            "get": {
                "description": "Update beat status to 'in_moderation' and set moderation timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Send beat to moderation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beat ID to send to moderation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/sortByStatus/{status}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get unpublished beats filtered by status for the authenticated beatmaker",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beats"
                ],
                "summary": "Get beats by status for current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status to filter by",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/unpublishedBeatById/{id}": {
            "get": {
                "description": "Retrieves an unpublished beat with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Beats"
                ],
                "summary": "Get an unpublished beat by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beat ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatSuccessResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        },
        "/unpbeats/unpublishedBeatsByBeatmakerJWT": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all unpublished beats for the authenticated beatmaker",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beats"
                ],
                "summary": "Get user's unpublished beats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.UnpublishedBeatErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.AvailableFiles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mp3Url": {
                    "type": "string"
                },
                "unpublishedBeatID": {
                    "type": "string"
                },
                "wavurl": {
                    "type": "string"
                },
                "zipurl": {
                    "type": "string"
                }
            }
        },
        "entities.Genre": {
            "description": "entities.Genre",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Jerk"
                }
            }
        },
        "entities.Instrument": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Keynote": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Mood": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Timestamp": {
            "type": "object",
            "required": [
                "timeEnd",
                "timeStart"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeEnd": {
                    "type": "integer",
                    "maximum": 300,
                    "minimum": 2
                },
                "timeStart": {
                    "type": "integer",
                    "maximum": 299,
                    "minimum": 1
                },
                "unpublishedbeatId": {
                    "type": "string",
                    "example": "01963e01-e46c-7996-996a-42ad3df115ac"
                }
            }
        },
        "presenters.MetadataErrorResponse": {
            "description": "presenters.MetadataErrorResponse",
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": ""
                },
                "error": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "presenters.MetadataListResponse": {
            "description": "presenters.MetadataListResponse",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string",
                    "example": ""
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "presenters.MetadataSuccessResponse": {
            "description": "presenters.MetadataSuccessResponse",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string",
                    "example": ""
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "presenters.UnpublishedBeat": {
            "description": "presenters.UnpublishedBeat",
            "type": "object",
            "required": [
                "availableFiles",
                "beatmakerId",
                "bpm",
                "genres",
                "keynoteId",
                "moods",
                "name",
                "price",
                "tags",
                "timestamps",
                "url"
            ],
            "properties": {
                "availableFiles": {
                    "$ref": "#/definitions/entities.AvailableFiles"
                },
                "beatmakerId": {
                    "type": "string",
                    "example": "019628ef-cd76-7d2d-bf80-48b8011fad40"
                },
                "bpm": {
                    "type": "integer",
                    "maximum": 400,
                    "minimum": 20,
                    "example": 120
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 2,
                    "example": "Chill summer beat with tropical influences"
                },
                "err": {
                    "type": "string"
                },
                "genres": {
                    "description": "many to many",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Genre"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "019628ef-cd76-7d2d-bf80-48b8011fad40"
                },
                "instruments": {
                    "description": "many to many",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Instrument"
                    }
                },
                "keynoteId": {
                    "description": "keynote has many beats, but each beat has only one keynote`",
                    "type": "integer",
                    "example": 11
                },
                "moods": {
                    "description": "many to many",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Mood"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2,
                    "example": "Summer Vibes"
                },
                "picture": {
                    "type": "string",
                    "example": "https://storage.yandexcloud.net/imagesall/019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
                },
                "price": {
                    "type": "integer",
                    "example": 2999
                },
                "sent_to_moderation_at": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "example": "draft"
                },
                "tags": {
                    "description": "many to many",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Tag"
                    }
                },
                "timestamps": {
                    "description": "a beat has many timestamps, but each timestamp has only one beat",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Timestamp"
                    }
                },
                "updated_at": {
                    "type": "integer"
                },
                "url": {
                    "type": "string",
                    "example": "https://storage.yandexcloud.net/mp3beats/019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
                }
            }
        },
        "presenters.UnpublishedBeatErrorResponse": {
            "description": "presenters.UnpublishedBeatErrorResponse",
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "string",
                    "example": "null"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "presenters.UnpublishedBeatListResponse": {
            "description": "presenters.UnpublishedBeatListResponse",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.UnpublishedBeat"
                    }
                },
                "error": {
                    "type": "string",
                    "example": "null"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "presenters.UnpublishedBeatSuccessResponse": {
            "description": "presenters.UnpublishedBeatSuccessResponse",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/presenters.UnpublishedBeat"
                },
                "error": {
                    "type": "string",
                    "example": "null"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}