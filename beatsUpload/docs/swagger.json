{
    "swagger": "2.0",
    "info": {
        "description": "Deals with presigned requests. Pushes updates to Beats and User microservice, when files are uploaded.",
        "title": "Beats Upload Service",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/ObjectsFromBucket/{bucket}": {
            "get": {
                "description": "Get a list of objects from the specified S3 bucket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "List objects in a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buckets": {
            "get": {
                "description": "Get a list of all available S3 buckets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "List all S3 buckets",
                "responses": {
                    "200": {
                        "description": "Returns list of buckets",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Access denied",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/getObjectsFromBucket/{bucket}": {
            "get": {
                "description": "Get a list of objects from the specified S3 bucket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "List objects in a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/presigned/getPresignedDeleteRequest/{bucket}": {
            "post": {
                "description": "Create a presigned URL to delete an object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presigned"
                ],
                "summary": "Generate presigned DELETE URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presigned URL generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/presigned/getPresignedGetRequest/{bucket}": {
            "post": {
                "description": "Create a presigned URL to download an object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presigned"
                ],
                "summary": "Generate presigned GET URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presigned URL generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/presigned/getPresignedPostRequest/{bucket}": {
            "post": {
                "description": "Create a presigned URL to upload an object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Presigned"
                ],
                "summary": "Generate presigned PUT URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presigned URL generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateURL/{entity}/{filetype}": {
            "post": {
                "description": "Verify if a file exists, file type in S3 and publish to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Update"
                ],
                "summary": "Validates the file, pushes to User or Beat Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User or Beat",
                        "name": "entity",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "fileType (mp3, wav, zip, cover or pfp)",
                        "name": "filetype",
                        "in": "path"
                    },
                    {
                        "description": "UpdateRequest",
                        "name": "UpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.UpdateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
                },
                "objectKey": {
                    "type": "string",
                    "example": "019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
                }
            }
        },
        "handler.request": {
            "type": "object",
            "properties": {
                "objectKey": {
                    "type": "string",
                    "example": "019623bd-3d0b-7dc2-8a1f-f782adeb42b4"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}