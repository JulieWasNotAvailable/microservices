services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22180:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  beatsupload:
    build:
      context: ./beatsUpload
      dockerfile: Dockerfile
    container_name: beatsupload
    ports:
      - "7774:7774"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5433
      - DB_USER=postgres
      - DB_PASSWORD=i_love_tuesdays123
      - DB_NAME=tmp02

  userca:
    build:
      context: ./userCA
      dockerfile: Dockerfile
    container_name: userca
    ports:
      - "7773:7773"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5433
      - DB_USER=postgres
      - DB_PASSWORD=i_love_tuesdays123
      - DB_NAME=tmp02

  unpublished:
    build:
      context: ./unpublished
      dockerfile: Dockerfile
    container_name: unpublished
    ports:
      - "7772:7772"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5433
      - DB_USER=postgres
      - DB_PASSWORD=i_love_tuesdays123
      - DB_NAME=tmp02

  postgres:
    image: postgres 
    container_name: postgres
    restart: always
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_PASSWORD=i_love_tuesdays123
      - POSTGRES_PORT=5433
      - POSTGRES_DB=tmp02
    volumes:
      - ./pgdata:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: -p 5433

  nginx:
      image: nginx:latest
      container_name: nginx
      ports:
        - "8080:80"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - beatsupload
        - userca
        - unpublished

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge